/**
 * Return string for creating sql table named USER.
 * Table wont be created if table USER already exists.
 *
 * TABLE USER
 * UserId  		   INTEGER  		The unique id to identify the user.
 * UserName        VARCHAR(50)      The unique username created automatically from First name and Last name.
 * FirstName 	   VARCHAR(50)		The first name of the user.
 * LastName		   VARCHAR(50)		The last name of the user.
 * Gender  		   VARCHAR(10)		The gender of the user.
 * Birth   		   DATETIME		    The birth date of the user.
 * Email           VARCHAR(50)		The unique email of the user.
 * Phone   		   VARCHAR(50)		The phone number of the user.
 * Street   	   VARCHAR(50)		The street address of the user.
 * City    		   VARCHAR(50)		The city of the user.
 * Zip     		   VARCHAR(50)		The postcode of the user.
 * PasswordHash	   TEXT    		    The password hash generated by the appropriate algorithm.
 *                                  We must avoid storing plain or encrypted passwords.
 * Admin	       TINYINT(1)		The flag to identify whether the user is an administrator.
 * Manager	       TINYINT(1)		The flag to identify whether the user is an manager.
 * Waiter	       TINYINT(1)		The flag to identify whether the user is an waiter.
 * Chef	           TINYINT(1)		The flag to identify whether the user is an chef.
 * CreatorId  	   INTEGER  		The unique id to identify creator fo the user.
 * Registered	   DATETIME		    Date of user registration. I.e.: It can be used for calculating
 *                                  life of the user with the application.
 * LastLogin	   DATETIME		    It can be used to identify the last login of the user.
 * Comment		   TEXT	     	    The comment about user. Can be created by manager or admin.
 *
 */
export default function UserTable() {
	const sql = 'CREATE TABLE IF NOT EXISTS USER(\'UserId\' INTEGER PRIMARY KEY AUTOINCREMENT,\
                \'UserName\' VARCHAR(50) NOT NULL UNIQUE,\'FirstName\' VARCHAR(50) NOT NULL,\
                \'LastName\' VARCHAR(50) NOT NULL,\'Gender\' VARCHAR(10) NOT NULL,\
                \'Birth\' DATETIME NOT NULL,\'Email\' VARCHAR(50) NULL DEFAULT NULL UNIQUE,\
                \'Phone\' VARCHAR(50) NULL DEFAULT NULL,\'Street\' VARCHAR(50) NULL DEFAULT NULL,\
                \'City\' VARCHAR(50) NULL DEFAULT NULL,\'Zip\' VARCHAR(50) NULL DEFAULT NULL,\
                \'PasswordHash\' TEXT NOT NULL,\'Admin\' TINYINT(1) NOT NULL DEFAULT 0,\
                \'Manager\' TINYINT(1) NOT NULL DEFAULT 0,\'Waiter\' TINYINT(1) NOT NULL DEFAULT 0,\
                \'Chef\' TINYINT(1) NOT NULL DEFAULT 0,\'CreatorId\' INTEGER NOT NULL,\
                \'Registered\' DATETIME NOT NULL DEFAULT (datetime(\'now\')),\
                \'LastLogin\' DATETIME NULL DEFAULT NULL,\'Comment\' TEXT NULL DEFAULT NULL,\
                FOREIGN KEY(CreatorId) REFERENCES USER(UserId));'
	return sql
}


